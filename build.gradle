plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id 'checkstyle'
	id 'org.owasp.dependencycheck' version '8.4.0'
}

ext {
	springBootVersion = '3.3.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Proxy for the Pokemon API'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

// JaCoCo configuration
jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.80
			}
		}
	}
}

// Checkstyle configuration
checkstyle {
	toolVersion = '10.12.4'
	configFile = file('config/checkstyle/checkstyle.xml')
}

// OWASP Dependency Check configuration
dependencyCheck {
	format = 'HTML'
	suppressionFile = 'config/dependency-check/suppressions.xml'
}

// Integration test task
task integrationTest(type: Test) {
	useJUnitPlatform()
	testClassesDirs = sourceSets.test.output.classesDirs
	classpath = sourceSets.test.runtimeClasspath
	include '**/*IntegrationTest.class'
	finalizedBy jacocoTestReport
}
